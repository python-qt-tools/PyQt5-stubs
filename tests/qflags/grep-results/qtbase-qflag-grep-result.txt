qmake\library\qmakeevaluator.h:    Q_DECLARE_FLAGS(LoadFlags, LoadFlag)
qmake\library\qmakeparser.h:    Q_DECLARE_FLAGS(ParseFlags, ParseFlag)
qmake\library\qmakevfs.h:    Q_DECLARE_FLAGS(VfsFlags, VfsFlag)
qmake\generators\makefile.h:    Q_DECLARE_FLAGS(FileFixifyTypes, FileFixifyType)
src\concurrent\qtconcurrentreducekernel.h:Q_DECLARE_FLAGS(ReduceOptions, ReduceOption)
src\dbus\qdbusconnection.h:    Q_DECLARE_FLAGS(RegisterOptions, RegisterOption)
src\dbus\qdbusconnection.h:    Q_DECLARE_FLAGS(VirtualObjectRegisterOptions, VirtualObjectRegisterOption)
src\dbus\qdbusconnection.h:    Q_DECLARE_FLAGS(ConnectionCapabilities, ConnectionCapability)
src\opengl\qgl.h:    Q_DECLARE_FLAGS(FormatOptions, FormatOption)
src\opengl\qgl.h:    Q_DECLARE_FLAGS(OpenGLVersionFlags, OpenGLVersionFlag)
src\opengl\qgl.h:    Q_DECLARE_FLAGS(BindOptions, BindOption)
src\opengl\qglfunctions.h:    Q_DECLARE_FLAGS(OpenGLFeatures, OpenGLFeature)
src\opengl\qglshaderprogram.h:    Q_DECLARE_FLAGS(ShaderType, ShaderTypeBit)
src\dbus\qdbusservicewatcher.h:    Q_DECLARE_FLAGS(WatchMode, WatchModeFlag)
examples\network\torrent\peerwireclient.h:    Q_DECLARE_FLAGS(PeerWireState, PeerWireStateFlag)
src\corelib\codecs\qtextcodec.h:    Q_DECLARE_FLAGS(ConversionFlags, ConversionFlag)
src\corelib\codecs\qtextcodec_p.h:    Q_DECLARE_FLAGS(ConversionFlags, ConversionFlag)
src\gui\accessible\qaccessible.h:    Q_DECLARE_FLAGS(Relation, RelationFlag)
src\corelib\io\qabstractfileengine_p.h:    Q_DECLARE_FLAGS(FileFlags, FileFlag)
src\corelib\global\qflags.h:#define Q_DECLARE_FLAGS(Flags, Enum)\
src\corelib\global\qflags.h:#define Q_DECLARE_FLAGS(Flags, Enum)\
src\corelib\itemmodels\qabstractitemmodel.h:    Q_DECLARE_FLAGS(CheckIndexOptions, CheckIndexOption)
src\corelib\io\qdir.h:    Q_DECLARE_FLAGS(Filters, Filter)
src\corelib\io\qdir.h:    Q_DECLARE_FLAGS(SortFlags, SortFlag)
src\corelib\io\qdiriterator.h:    Q_DECLARE_FLAGS(IteratorFlags, IteratorFlag)
src\corelib\io\qdir_p.h:    Q_DECLARE_FLAGS(PathNormalizations, PathNormalization)
src\corelib\io\qfiledevice.h:    Q_DECLARE_FLAGS(Permissions, Permission)
src\corelib\io\qfiledevice.h:    Q_DECLARE_FLAGS(FileHandleFlags, FileHandleFlag)
src\corelib\itemmodels\qitemselectionmodel.h:    Q_DECLARE_FLAGS(SelectionFlags, SelectionFlag)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(KeyboardModifiers, KeyboardModifier)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(MouseButtons, MouseButton)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(Orientations, Orientation)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(SplitBehavior, SplitBehaviorFlags)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(Alignment, AlignmentFlag)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(WindowFlags, WindowType)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(WindowStates, WindowState)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(ApplicationStates, ApplicationState)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(ScreenOrientations, ScreenOrientation)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(ImageConversionFlags, ImageConversionFlag)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(DockWidgetAreas, DockWidgetArea)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(ToolBarAreas, ToolBarArea)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(Edges, Edge)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(InputMethodQueries, InputMethodQuery)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(InputMethodHints, InputMethodHint)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(FindChildOptions, FindChildOption)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(DropActions, DropAction)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(ItemFlags, ItemFlag)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(MatchFlags, MatchFlag)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(TextInteractionFlags, TextInteractionFlag)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(TouchPointStates, TouchPointState)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(GestureFlags, GestureFlag)
src\corelib\global\qnamespace.h:    Q_DECLARE_FLAGS(MouseEventFlags, MouseEventFlag)
src\corelib\io\qfilesystemmetadata_p.h:    Q_DECLARE_FLAGS(MetaDataFlags, MetaDataFlag)
src\gui\image\qimageiohandler.h:    Q_DECLARE_FLAGS(Transformations, Transformation)
src\gui\image\qimageiohandler.h:    Q_DECLARE_FLAGS(Capabilities, Capability)
src\corelib\kernel\qeventloop.h:    Q_DECLARE_FLAGS(ProcessEventsFlags, ProcessEventsFlag)
src\corelib\io\qiodevice.h:    Q_DECLARE_FLAGS(OpenMode, OpenModeFlag)
src\gui\kernel\qevent.h:        Q_DECLARE_FLAGS(InfoFlags, InfoFlag)
src\corelib\io\qloggingregistry_p.h:    Q_DECLARE_FLAGS(PatternFlags, PatternFlag)
src\corelib\plugin\qlibrary.h:    Q_DECLARE_FLAGS(LoadHints, LoadHint)
src\gui\opengl\qopenglbuffer.h:    Q_DECLARE_FLAGS(RangeAccessFlags, RangeAccessFlag)
src\corelib\kernel\qmetaobjectbuilder_p.h:    Q_DECLARE_FLAGS(AddMembers, AddMember)
src\corelib\kernel\qmetaobjectbuilder_p.h:    Q_DECLARE_FLAGS(MetaObjectFlags, MetaObjectFlag)
src\gui\opengl\qopengldebug.h:    Q_DECLARE_FLAGS(Sources, Source)
src\gui\opengl\qopengldebug.h:    Q_DECLARE_FLAGS(Types, Type)
src\gui\opengl\qopengldebug.h:    Q_DECLARE_FLAGS(Severities, Severity)
src\corelib\kernel\qmetatype.h:    Q_DECLARE_FLAGS(TypeFlags, TypeFlag)
src\gui\opengl\qopenglextensions_p.h:    Q_DECLARE_FLAGS(OpenGLExtensions, OpenGLExtension)
src\corelib\io\qstandardpaths.h:    Q_DECLARE_FLAGS(LocateOptions, LocateOption)
src\gui\opengl\qopenglfunctions.h:    Q_DECLARE_FLAGS(OpenGLFeatures, OpenGLFeature)
src\corelib\kernel\qppsattribute_p.h:    Q_DECLARE_FLAGS(Flags, Flag)
src\corelib\kernel\qppsobject_p.h:    Q_DECLARE_FLAGS(OpenModes, OpenMode)
src\gui\kernel\qplatformcursor.h:    Q_DECLARE_FLAGS(Capabilities, Capability)
src\network\access\qhstspolicy.h:    Q_DECLARE_FLAGS(PolicyFlags, PolicyFlag)
src\gui\kernel\qplatformdialoghelper.h:    Q_DECLARE_FLAGS(StandardButtons, StandardButton)
src\gui\kernel\qplatformdialoghelper.h:    Q_DECLARE_FLAGS(ColorDialogOptions, ColorDialogOption)
src\gui\kernel\qplatformdialoghelper.h:    Q_DECLARE_FLAGS(FontDialogOptions, FontDialogOption)
src\gui\kernel\qplatformdialoghelper.h:    Q_DECLARE_FLAGS(FileDialogOptions, FileDialogOption)
src\gui\kernel\qplatformgraphicsbuffer.h:    Q_DECLARE_FLAGS(AccessTypes, AccessType);
src\gui\painting\qblittable_p.h:    Q_DECLARE_FLAGS (Capabilities, Capability)
src\corelib\io\qurl.h:    Q_DECLARE_FLAGS(ComponentFormattingOptions, ComponentFormattingOption)
src\corelib\io\qurl.h:    Q_DECLARE_FLAGS(FormattingOptions, UrlFormattingOption)
src\corelib\io\qurl.h:    Q_DECLARE_FLAGS(UserInputResolutionOptions, UserInputResolutionOption)
src\gui\painting\qcolortransform_p.h:    Q_DECLARE_FLAGS(TransformFlags, TransformFlag)
src\gui\kernel\qplatformtheme.h:    Q_DECLARE_FLAGS(IconOptions, IconOption)
src\network\bearer\qnetworkconfigmanager.h:    Q_DECLARE_FLAGS(Capabilities, Capability)
src\network\bearer\qnetworkconfiguration.h:    Q_DECLARE_FLAGS(StateFlags, StateFlag)
src\gui\kernel\qsurfaceformat.h:    Q_DECLARE_FLAGS(FormatOptions, FormatOption)
src\network\bearer\qnetworksession.h:    Q_DECLARE_FLAGS(UsagePolicies, UsagePolicy)
src\gui\painting\qpaintengine.h:    Q_DECLARE_FLAGS(RenderFlags, RenderFlag)
src\gui\painting\qpaintengine.h:    Q_DECLARE_FLAGS(PaintEngineFeatures, PaintEngineFeature)
src\gui\painting\qpaintengine.h:    Q_DECLARE_FLAGS(DirtyFlags, DirtyFlag)
src\gui\kernel\qtouchdevice.h:    Q_DECLARE_FLAGS(Capabilities, CapabilityFlag)
src\gui\opengl\qopenglshaderprogram.h:    Q_DECLARE_FLAGS(ShaderType, ShaderTypeBit)
src\gui\opengl\qopengltexture.h:    Q_DECLARE_FLAGS(Features, Feature)
src\gui\painting\qpainter.h:    Q_DECLARE_FLAGS(RenderHints, RenderHint)
src\gui\painting\qpainter.h:    Q_DECLARE_FLAGS(PixmapFragmentHints, PixmapFragmentHint)
src\gui\opengl\qopengltextureuploader_p.h:    Q_DECLARE_FLAGS(BindOptions, BindOption)
src\network\access\qspdyprotocolhandler_p.h:    Q_DECLARE_FLAGS(DataFrameFlags, DataFrameFlag)
src\network\access\qspdyprotocolhandler_p.h:    Q_DECLARE_FLAGS(ControlFrameFlags, ControlFrameFlag)
src\network\access\qspdyprotocolhandler_p.h:    Q_DECLARE_FLAGS(SETTINGS_Flags, SETTINGS_Flag)
src\network\access\qspdyprotocolhandler_p.h:    Q_DECLARE_FLAGS(SETTINGS_ID_Flags, SETTINGS_ID_Flag)
src\gui\painting\qplatformbackingstore.h:    Q_DECLARE_FLAGS(Flags, Flag)
src\gui\painting\qplatformbackingstore.h:    Q_DECLARE_FLAGS(TextureFlags, TextureFlag)
src\gui\text\qfontengine_p.h:    Q_DECLARE_FLAGS(ShaperFlags, ShaperFlag)
src\gui\rhi\qrhi_p.h:    Q_DECLARE_FLAGS(StageFlags, StageFlag)
src\gui\rhi\qrhi_p.h:    Q_DECLARE_FLAGS(UsageFlags, UsageFlag)
src\gui\rhi\qrhi_p.h:    Q_DECLARE_FLAGS(Flags, Flag)
src\gui\rhi\qrhi_p.h:    Q_DECLARE_FLAGS(Flags, Flag)
src\gui\rhi\qrhi_p.h:    Q_DECLARE_FLAGS(Flags, Flag)
src\gui\rhi\qrhi_p.h:    Q_DECLARE_FLAGS(Flags, Flag)
src\gui\rhi\qrhi_p.h:    Q_DECLARE_FLAGS(ColorMask, ColorMaskComponent)
src\gui\rhi\qrhi_p.h:    Q_DECLARE_FLAGS(Flags, Flag)
src\gui\rhi\qrhi_p.h:    Q_DECLARE_FLAGS(Flags, Flag)
src\gui\rhi\qrhi_p.h:    Q_DECLARE_FLAGS(BeginFrameFlags, BeginFrameFlag)
src\gui\rhi\qrhi_p.h:    Q_DECLARE_FLAGS(EndFrameFlags, EndFrameFlag)
src\gui\rhi\qshaderdescription_p.h:    Q_DECLARE_FLAGS(ImageFlags, ImageFlag)
src\gui\vulkan\qvulkaninstance.h:    Q_DECLARE_FLAGS(Flags, Flag)
src\gui\rhi\qshader_p.h:    Q_DECLARE_FLAGS(Flags, Flag)
src\gui\util\qlayoutpolicy_p.h:    Q_DECLARE_FLAGS(ControlTypes, ControlType)
src\gui\vulkan\qvulkanwindow.h:    Q_DECLARE_FLAGS(Flags, Flag)
src\gui\text\qglyphrun.h:    Q_DECLARE_FLAGS(GlyphRunFlags, GlyphRunFlag)
src\gui\text\qrawfont.h:    Q_DECLARE_FLAGS(LayoutFlags, LayoutFlag)
src\gui\text\qtextdocument.h:    Q_DECLARE_FLAGS(MarkdownFeatures, MarkdownFeature)
src\gui\text\qtextdocument.h:    Q_DECLARE_FLAGS(FindFlags, FindFlag)
src\network\kernel\qhostaddress.h:    Q_DECLARE_FLAGS(ConversionMode, ConversionModeFlag)
src\network\socket\qabstractsocket.h:    Q_DECLARE_FLAGS(BindMode, BindFlag)
src\network\socket\qabstractsocket.h:    Q_DECLARE_FLAGS(PauseModes, PauseMode)
src\network\socket\qabstractsocketengine_p.h:    Q_DECLARE_FLAGS(PacketHeaderOptions, PacketHeaderOption)
src\gui\text\qtextformat.h:    Q_DECLARE_FLAGS(PageBreakFlags, PageBreakFlag)
src\network\socket\qlocalserver.h:    Q_DECLARE_FLAGS(SocketOptions, SocketOption)
src\gui\text\qtextmarkdownimporter_p.h:    Q_DECLARE_FLAGS(Features, Feature)
src\network\kernel\qnetworkinterface.h:    Q_DECLARE_FLAGS(InterfaceFlags, InterfaceFlag)
src\gui\text\qtextoption.h:    Q_DECLARE_FLAGS(Flags, Flag)
src\network\ssl\qssl.h:    Q_DECLARE_FLAGS(SslOptions, SslOption)
src\network\kernel\qnetworkproxy.h:    Q_DECLARE_FLAGS(Capabilities, Capability)
src\corelib\text\qbytearray.h:    Q_DECLARE_FLAGS(Base64Options, Base64Option)
src\corelib\text\qlocale.h:    Q_DECLARE_FLAGS(NumberOptions, NumberOption)
src\corelib\text\qlocale.h:    Q_DECLARE_FLAGS(DataSizeFormats, DataSizeFormat)
src\corelib\serialization\qcborvalue.h:    Q_DECLARE_FLAGS(EncodingOptions, EncodingOption)
src\corelib\serialization\qcborvalue.h:    Q_DECLARE_FLAGS(DiagnosticNotationOptions, DiagnosticNotationOption)
src\corelib\serialization\qcborvalue_p.h:    Q_DECLARE_FLAGS(ValueFlags, ValueFlag)
src\corelib\time\qdatetimeparser_p.h:    Q_DECLARE_FLAGS(Sections, Section)
src\corelib\time\qdatetimeparser_p.h:    Q_DECLARE_FLAGS(FieldInfo, FieldInfoFlag)
src\corelib\time\qdatetime_p.h:    Q_DECLARE_FLAGS(StatusFlags, StatusFlag)
src\corelib\text\qregularexpression.h:    Q_DECLARE_FLAGS(PatternOptions, PatternOption)
src\corelib\text\qregularexpression.h:    Q_DECLARE_FLAGS(MatchOptions, MatchOption)
src\corelib\text\qstring.h:    Q_DECLARE_FLAGS(SectionFlags, SectionFlag)
src\corelib\serialization\qtextstream.h:    Q_DECLARE_FLAGS(NumberFlags, NumberFlag)
src\corelib\text\qtextboundaryfinder.h:    Q_DECLARE_FLAGS( BoundaryReasons, BoundaryReason )
src\corelib\text\qunicodetools_p.h:Q_DECLARE_FLAGS(CharAttributeOptions, CharAttributeOption)
src\corelib\tools\qarraydata.h:    Q_DECLARE_FLAGS(AllocationOptions, AllocationOption)
src\corelib\tools\qcommandlineoption.h:    Q_DECLARE_FLAGS(Flags, Flag)
src\platformheaders\windowsfunctions\qwindowswindowfunctions.h:    Q_DECLARE_FLAGS(TouchWindowTouchTypes, TouchWindowTouchType)
src\platformheaders\xcbfunctions\qxcbwindowfunctions.h:    Q_DECLARE_FLAGS(WmWindowTypes, WmWindowType)
src\platformsupport\devicediscovery\qdevicediscovery_p.h:    Q_DECLARE_FLAGS(QDeviceTypes, QDeviceType)
src\platformsupport\eglconvenience\qeglplatformcontext_p.h:    Q_DECLARE_FLAGS(Flags, Flag)
src\platformsupport\fbconvenience\qfbscreen_p.h:    Q_DECLARE_FLAGS(Flags, Flag)
src\printsupport\dialogs\qabstractprintdialog.h:    Q_DECLARE_FLAGS(PrintDialogOptions, PrintDialogOption)
src\platformsupport\kmsconvenience\qkmsdevice_p.h:    Q_DECLARE_FLAGS(Rotations, Rotation)
src\sql\kernel\qtsqlglobal.h:    Q_DECLARE_FLAGS(ParamType, ParamTypeFlag)
src\widgets\dialogs\qcolordialog.h:    Q_DECLARE_FLAGS(ColorDialogOptions, ColorDialogOption)
src\widgets\dialogs\qfiledialog.h:    Q_DECLARE_FLAGS(Options, Option)
src\widgets\dialogs\qfilesystemmodel.h:    Q_DECLARE_FLAGS(Options, Option)
src\widgets\dialogs\qfontdialog.h:    Q_DECLARE_FLAGS(FontDialogOptions, FontDialogOption)
src\widgets\effects\qgraphicseffect.h:    Q_DECLARE_FLAGS(ChangeFlags, ChangeFlag)
src\widgets\effects\qgraphicseffect.h:    Q_DECLARE_FLAGS(BlurHints, BlurHint)
src\widgets\dialogs\qinputdialog.h:    Q_DECLARE_FLAGS(InputDialogOptions, InputDialogOption)
src\widgets\dialogs\qmessagebox.h:    Q_DECLARE_FLAGS(StandardButtons, StandardButton)
src\widgets\dialogs\qwizard.h:    Q_DECLARE_FLAGS(WizardOptions, WizardOption)
src\widgets\itemviews\qabstractitemview.h:    Q_DECLARE_FLAGS(EditTriggers, EditTrigger)
src\widgets\graphicsview\qgraphicsitem.h:    Q_DECLARE_FLAGS(GraphicsItemFlags, GraphicsItemFlag)
src\widgets\itemviews\qfileiconprovider.h:    Q_DECLARE_FLAGS(Options, Option)
src\widgets\kernel\qgesture.h:    Q_DECLARE_FLAGS(ChangeFlags, ChangeFlag)
src\widgets\kernel\qgesturerecognizer.h:    Q_DECLARE_FLAGS(Result, ResultFlag)
src\widgets\graphicsview\qgraphicsscene.h:    Q_DECLARE_FLAGS(SceneLayers, SceneLayer)
src\widgets\graphicsview\qgraphicsview.h:    Q_DECLARE_FLAGS(CacheMode, CacheModeFlag)
src\widgets\graphicsview\qgraphicsview.h:    Q_DECLARE_FLAGS(OptimizationFlags, OptimizationFlag)
src\widgets\kernel\qsizepolicy.h:    Q_DECLARE_FLAGS(ControlTypes, ControlType)
src\widgets\itemviews\qtreewidgetitemiterator.h:    Q_DECLARE_FLAGS(IteratorFlags, IteratorFlag)
src\widgets\kernel\qwidget.h:    Q_DECLARE_FLAGS(RenderFlags, RenderFlag)
src\widgets\kernel\qwidget_p.h:    Q_DECLARE_FLAGS(DrawWidgetFlags, DrawWidgetFlag)
src\widgets\styles\qdrawutil.h:    Q_DECLARE_FLAGS(DrawingHints, DrawingHint)
src\widgets\styles\qstyle.h:    Q_DECLARE_FLAGS(State, StateFlag)
src\widgets\styles\qstyle.h:    Q_DECLARE_FLAGS(SubControls, SubControl)
src\widgets\widgets\qabstractspinbox.h:    Q_DECLARE_FLAGS(StepEnabled, StepEnabledFlag)
src\widgets\styles\qstyleoption.h:    Q_DECLARE_FLAGS(FrameFeatures, FrameFeature)
src\widgets\styles\qstyleoption.h:    Q_DECLARE_FLAGS(ButtonFeatures, ButtonFeature)
src\widgets\styles\qstyleoption.h:    Q_DECLARE_FLAGS(CornerWidgets, CornerWidget)
src\widgets\styles\qstyleoption.h:    Q_DECLARE_FLAGS(TabFeatures, TabFeature)
src\widgets\styles\qstyleoption.h:    Q_DECLARE_FLAGS(ToolBarFeatures, ToolBarFeature)
src\widgets\styles\qstyleoption.h:    Q_DECLARE_FLAGS(ViewItemFeatures, ViewItemFeature)
src\widgets\styles\qstyleoption.h:    Q_DECLARE_FLAGS(ToolButtonFeatures, ToolButtonFeature)
src\widgets\widgets\qdialogbuttonbox.h:    Q_DECLARE_FLAGS(StandardButtons, StandardButton)
src\widgets\widgets\qdockwidget.h:    Q_DECLARE_FLAGS(DockWidgetFeatures, DockWidgetFeature)
src\widgets\widgets\qfontcombobox.h:    Q_DECLARE_FLAGS(FontFilters, FontFilter)
src\widgets\widgets\qdatetimeedit.h:    Q_DECLARE_FLAGS(Sections, Section)
src\widgets\widgets\qmdiarea.h:    Q_DECLARE_FLAGS(AreaOptions, AreaOption)
src\widgets\widgets\qmdisubwindow.h:    Q_DECLARE_FLAGS(SubWindowOptions, SubWindowOption)
src\widgets\widgets\qmainwindow.h:    Q_DECLARE_FLAGS(DockOptions, DockOption)
tests\manual\diaglib\eventfilter.h:    Q_DECLARE_FLAGS(EventCategories, EventCategory)
tests\manual\diaglib\eventfilter.h:    Q_DECLARE_FLAGS(ObjectTypes, ObjectType)
src\widgets\widgets\qtextedit.h:    Q_DECLARE_FLAGS(AutoFormatting, AutoFormattingFlag)
tests\manual\diaglib\qwindowdump.h:Q_DECLARE_FLAGS(FormatWindowOptions, FormatWindowOption)
src\network\access\http2\http2protocol_p.h:Q_DECLARE_FLAGS(FrameFlags, FrameFlag)
src\plugins\bearer\networkmanager\qnetworkmanagerservice.h:    Q_DECLARE_FLAGS(ApFlags, ApFlag)
src\plugins\bearer\networkmanager\qnetworkmanagerservice.h:    Q_DECLARE_FLAGS(ApSecurityFlags, ApSecurityFlag)
src\plugins\bearer\networkmanager\qnetworkmanagerservice.h:    Q_DECLARE_FLAGS(ModemCapabilities, ModemCapability)
src\plugins\platforms\android\qandroidinputcontext.h:    Q_DECLARE_FLAGS(HandleModes, HandleMode)
src\plugins\platforms\direct2d\qwindowsdirect2dpaintengine.h:    Q_DECLARE_FLAGS(Flags, Flag)
src\plugins\platforms\cocoa\qcocoaintegration.h:    Q_DECLARE_FLAGS(Options, Option)
src\plugins\platforms\wasm\qwasmcompositor.h:    Q_DECLARE_FLAGS(SubControls, QWasmSubControl)
src\plugins\platforms\wasm\qwasmcompositor.h:    Q_DECLARE_FLAGS(StateFlags, QWasmStateFlag)
src\plugins\platforms\cocoa\qcocoawindow.h:    Q_DECLARE_FLAGS(RecreationReasons, RecreationReason)
src\plugins\platforms\qnx\qqnxintegration.h:    Q_DECLARE_FLAGS(Options, Option)
src\plugins\platforms\xcb\qxcbeventqueue.h:    Q_DECLARE_FLAGS(PeekOptions, PeekOption)
src\plugins\platforms\windows\qwindowsopengltester.h:    Q_DECLARE_FLAGS(Renderers, Renderer)
src\plugins\platforms\xcb\qxcbwindow.h:    Q_DECLARE_FLAGS(NetWmStates, NetWmState)
tests\auto\other\macgui\guitest.h:    Q_DECLARE_FLAGS(Directions, Direction)
tests\auto\tools\moc\cxx11-enums.h:    Q_DECLARE_FLAGS(ClassFlags, ClassFlag)
tests\auto\tools\moc\cxx11-enums.h:    Q_DECLARE_FLAGS(StructFlags, StructFlag)
tests\auto\tools\moc\cxx11-enums.h:    Q_DECLARE_FLAGS(ClassFlags, ClassFlag)
tests\auto\tools\moc\namespaced-flags.h:        Q_DECLARE_FLAGS( Flags, Flag )
src\plugins\platforms\eglfs\api\qeglfswindow_p.h:    Q_DECLARE_FLAGS(Flags, Flag)
tests\auto\corelib\tools\qsharedpointer\externaltests.h:        Q_DECLARE_FLAGS(QtModules, QtModule)
tests\benchmarks\corelib\io\qdiriterator\qfilesystemiterator.h:    Q_DECLARE_FLAGS(IteratorFlags, IteratorFlag)
tests\benchmarks\widgets\graphicsview\functional\GraphicsViewBenchmark\widgets\settings.h:    Q_DECLARE_FLAGS(Options, Option)
